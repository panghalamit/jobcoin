// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jobcoin.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Tx int32

const (
	Tx_GET_BAL      Tx = 0
	Tx_GET_NEW_ADDR Tx = 1
	Tx_FUND_ADDR    Tx = 2
	Tx_TRANSFER     Tx = 3
)

var Tx_name = map[int32]string{
	0: "GET_BAL",
	1: "GET_NEW_ADDR",
	2: "FUND_ADDR",
	3: "TRANSFER",
}

var Tx_value = map[string]int32{
	"GET_BAL":      0,
	"GET_NEW_ADDR": 1,
	"FUND_ADDR":    2,
	"TRANSFER":     3,
}

func (x Tx) String() string {
	return proto.EnumName(Tx_name, int32(x))
}

func (Tx) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{0}
}

type Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Balance struct {
	Balance              int64    `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{1}
}

func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type AddressBalance struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              int64    `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressBalance) Reset()         { *m = AddressBalance{} }
func (m *AddressBalance) String() string { return proto.CompactTextString(m) }
func (*AddressBalance) ProtoMessage()    {}
func (*AddressBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{2}
}

func (m *AddressBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressBalance.Unmarshal(m, b)
}
func (m *AddressBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressBalance.Marshal(b, m, deterministic)
}
func (m *AddressBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressBalance.Merge(m, src)
}
func (m *AddressBalance) XXX_Size() int {
	return xxx_messageInfo_AddressBalance.Size(m)
}
func (m *AddressBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressBalance.DiscardUnknown(m)
}

var xxx_messageInfo_AddressBalance proto.InternalMessageInfo

func (m *AddressBalance) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressBalance) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type Success struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Success) Reset()         { *m = Success{} }
func (m *Success) String() string { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()    {}
func (*Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{3}
}

func (m *Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Success.Unmarshal(m, b)
}
func (m *Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Success.Marshal(b, m, deterministic)
}
func (m *Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Success.Merge(m, src)
}
func (m *Success) XXX_Size() int {
	return xxx_messageInfo_Success.Size(m)
}
func (m *Success) XXX_DiscardUnknown() {
	xxx_messageInfo_Success.DiscardUnknown(m)
}

var xxx_messageInfo_Success proto.InternalMessageInfo

type Error struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{4}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type TransferBalance struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Balance              int64    `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferBalance) Reset()         { *m = TransferBalance{} }
func (m *TransferBalance) String() string { return proto.CompactTextString(m) }
func (*TransferBalance) ProtoMessage()    {}
func (*TransferBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{5}
}

func (m *TransferBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferBalance.Unmarshal(m, b)
}
func (m *TransferBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferBalance.Marshal(b, m, deterministic)
}
func (m *TransferBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferBalance.Merge(m, src)
}
func (m *TransferBalance) XXX_Size() int {
	return xxx_messageInfo_TransferBalance.Size(m)
}
func (m *TransferBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferBalance.DiscardUnknown(m)
}

var xxx_messageInfo_TransferBalance proto.InternalMessageInfo

func (m *TransferBalance) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransferBalance) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransferBalance) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type Result struct {
	// Types that are valid to be assigned to Result:
	//	*Result_Addr
	//	*Result_Bal
	//	*Result_S
	Result               isResult_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{6}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

type isResult_Result interface {
	isResult_Result()
}

type Result_Addr struct {
	Addr *Address `protobuf:"bytes,1,opt,name=addr,proto3,oneof"`
}

type Result_Bal struct {
	Bal *Balance `protobuf:"bytes,2,opt,name=bal,proto3,oneof"`
}

type Result_S struct {
	S *Success `protobuf:"bytes,3,opt,name=s,proto3,oneof"`
}

func (*Result_Addr) isResult_Result() {}

func (*Result_Bal) isResult_Result() {}

func (*Result_S) isResult_Result() {}

func (m *Result) GetResult() isResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Result) GetAddr() *Address {
	if x, ok := m.GetResult().(*Result_Addr); ok {
		return x.Addr
	}
	return nil
}

func (m *Result) GetBal() *Balance {
	if x, ok := m.GetResult().(*Result_Bal); ok {
		return x.Bal
	}
	return nil
}

func (m *Result) GetS() *Success {
	if x, ok := m.GetResult().(*Result_S); ok {
		return x.S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Result) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Result_Addr)(nil),
		(*Result_Bal)(nil),
		(*Result_S)(nil),
	}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{7}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Command struct {
	Txn Tx `protobuf:"varint,1,opt,name=Txn,json=txn,proto3,enum=pb.Tx" json:"Txn,omitempty"`
	// Types that are valid to be assigned to Arg:
	//	*Command_Get
	//	*Command_Fund
	//	*Command_Transfer
	Arg                  isCommand_Arg `protobuf_oneof:"arg"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{8}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetTxn() Tx {
	if m != nil {
		return m.Txn
	}
	return Tx_GET_BAL
}

type isCommand_Arg interface {
	isCommand_Arg()
}

type Command_Get struct {
	Get *Address `protobuf:"bytes,2,opt,name=get,proto3,oneof"`
}

type Command_Fund struct {
	Fund *AddressBalance `protobuf:"bytes,3,opt,name=fund,proto3,oneof"`
}

type Command_Transfer struct {
	Transfer *TransferBalance `protobuf:"bytes,4,opt,name=transfer,proto3,oneof"`
}

func (*Command_Get) isCommand_Arg() {}

func (*Command_Fund) isCommand_Arg() {}

func (*Command_Transfer) isCommand_Arg() {}

func (m *Command) GetArg() isCommand_Arg {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (m *Command) GetGet() *Address {
	if x, ok := m.GetArg().(*Command_Get); ok {
		return x.Get
	}
	return nil
}

func (m *Command) GetFund() *AddressBalance {
	if x, ok := m.GetArg().(*Command_Fund); ok {
		return x.Fund
	}
	return nil
}

func (m *Command) GetTransfer() *TransferBalance {
	if x, ok := m.GetArg().(*Command_Transfer); ok {
		return x.Transfer
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Command) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Command_Get)(nil),
		(*Command_Fund)(nil),
		(*Command_Transfer)(nil),
	}
}

type QueryDepositAddress struct {
	Addrs                []*Address `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Value                int64      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *QueryDepositAddress) Reset()         { *m = QueryDepositAddress{} }
func (m *QueryDepositAddress) String() string { return proto.CompactTextString(m) }
func (*QueryDepositAddress) ProtoMessage()    {}
func (*QueryDepositAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{9}
}

func (m *QueryDepositAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDepositAddress.Unmarshal(m, b)
}
func (m *QueryDepositAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDepositAddress.Marshal(b, m, deterministic)
}
func (m *QueryDepositAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDepositAddress.Merge(m, src)
}
func (m *QueryDepositAddress) XXX_Size() int {
	return xxx_messageInfo_QueryDepositAddress.Size(m)
}
func (m *QueryDepositAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDepositAddress.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDepositAddress proto.InternalMessageInfo

func (m *QueryDepositAddress) GetAddrs() []*Address {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *QueryDepositAddress) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type DepositAddress struct {
	DepositAddr          *Address `protobuf:"bytes,1,opt,name=deposit_addr,json=depositAddr,proto3" json:"deposit_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositAddress) Reset()         { *m = DepositAddress{} }
func (m *DepositAddress) String() string { return proto.CompactTextString(m) }
func (*DepositAddress) ProtoMessage()    {}
func (*DepositAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc9b67e7cd229e6a, []int{10}
}

func (m *DepositAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositAddress.Unmarshal(m, b)
}
func (m *DepositAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositAddress.Marshal(b, m, deterministic)
}
func (m *DepositAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositAddress.Merge(m, src)
}
func (m *DepositAddress) XXX_Size() int {
	return xxx_messageInfo_DepositAddress.Size(m)
}
func (m *DepositAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositAddress.DiscardUnknown(m)
}

var xxx_messageInfo_DepositAddress proto.InternalMessageInfo

func (m *DepositAddress) GetDepositAddr() *Address {
	if m != nil {
		return m.DepositAddr
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.Tx", Tx_name, Tx_value)
	proto.RegisterType((*Address)(nil), "pb.Address")
	proto.RegisterType((*Balance)(nil), "pb.Balance")
	proto.RegisterType((*AddressBalance)(nil), "pb.AddressBalance")
	proto.RegisterType((*Success)(nil), "pb.Success")
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*TransferBalance)(nil), "pb.TransferBalance")
	proto.RegisterType((*Result)(nil), "pb.Result")
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*Command)(nil), "pb.Command")
	proto.RegisterType((*QueryDepositAddress)(nil), "pb.QueryDepositAddress")
	proto.RegisterType((*DepositAddress)(nil), "pb.DepositAddress")
}

func init() { proto.RegisterFile("jobcoin.proto", fileDescriptor_cc9b67e7cd229e6a) }

var fileDescriptor_cc9b67e7cd229e6a = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xdd, 0xae, 0xd2, 0x4c,
	0x14, 0xed, 0x0f, 0xa5, 0xb0, 0xf9, 0xf9, 0xc8, 0x3e, 0x5f, 0x22, 0x1e, 0x2f, 0xf4, 0xd4, 0x0b,
	0x89, 0x89, 0x18, 0xd1, 0x5b, 0x93, 0x03, 0xf2, 0x17, 0xe3, 0xc1, 0x38, 0xa7, 0xc6, 0x4b, 0xd2,
	0xd2, 0x81, 0x60, 0xa0, 0x43, 0xa6, 0x53, 0xed, 0x79, 0x23, 0x1f, 0xc2, 0x87, 0x33, 0x33, 0x9d,
	0x4a, 0x21, 0x78, 0xb7, 0xf7, 0xac, 0x35, 0x6b, 0xed, 0x99, 0x35, 0x2d, 0xb4, 0xbe, 0xb3, 0x70,
	0xc5, 0xb6, 0x71, 0xff, 0xc0, 0x99, 0x60, 0x68, 0x1d, 0x42, 0xef, 0x39, 0xb8, 0xc3, 0x28, 0xe2,
	0x34, 0x49, 0xb0, 0x0b, 0x6e, 0x90, 0x97, 0x5d, 0xf3, 0x99, 0xd9, 0xab, 0x93, 0xa2, 0x95, 0xa4,
	0x51, 0xb0, 0x0b, 0xe2, 0x15, 0x95, 0xa4, 0x30, 0x2f, 0x15, 0xc9, 0x26, 0x45, 0xeb, 0x8d, 0xa1,
	0xad, 0x95, 0x4a, 0xdc, 0xcb, 0x82, 0x65, 0x15, 0xeb, 0x54, 0xa5, 0x0e, 0xee, 0x7d, 0xba, 0x5a,
	0x49, 0xd7, 0xc7, 0xe0, 0x4c, 0x38, 0x67, 0x1c, 0x3b, 0x60, 0xef, 0x93, 0x8d, 0xd6, 0x90, 0xa5,
	0xf7, 0x19, 0xfe, 0xf3, 0x79, 0x10, 0x27, 0x6b, 0xca, 0x0b, 0x33, 0x84, 0xca, 0x9a, 0xb3, 0xbd,
	0x66, 0xa9, 0x1a, 0xdb, 0x60, 0x09, 0xa6, 0x1c, 0xea, 0xc4, 0x12, 0xac, 0x6c, 0x6b, 0x9f, 0xda,
	0x26, 0x50, 0x25, 0x34, 0x49, 0x77, 0x02, 0x6f, 0xa0, 0x22, 0xa7, 0x54, 0x3a, 0x8d, 0x41, 0xa3,
	0x7f, 0x08, 0xfb, 0xfa, 0x58, 0x73, 0x83, 0x28, 0x08, 0x9f, 0x82, 0x1d, 0x06, 0x3b, 0xa5, 0xab,
	0x19, 0x7a, 0x88, 0xb9, 0x41, 0x24, 0x82, 0x4f, 0xc0, 0x4c, 0x94, 0x83, 0x86, 0xf5, 0x89, 0xe6,
	0x06, 0x31, 0x93, 0x51, 0x0d, 0xaa, 0x5c, 0x59, 0x79, 0x2e, 0x38, 0x93, 0xfd, 0x41, 0x3c, 0x78,
	0xbf, 0x4c, 0x70, 0x3f, 0xb0, 0xfd, 0x3e, 0x88, 0x23, 0xec, 0x82, 0xed, 0x67, 0xb1, 0xb2, 0x6f,
	0x0f, 0xaa, 0x72, 0xb7, 0x9f, 0x11, 0x5b, 0x64, 0xb1, 0xb4, 0xdd, 0x50, 0x51, 0xb6, 0x3d, 0x0e,
	0x26, 0x11, 0xec, 0x41, 0x65, 0x9d, 0xc6, 0x91, 0x76, 0xc6, 0x12, 0xe3, 0x38, 0x9f, 0x62, 0xe0,
	0x1b, 0xa8, 0x09, 0x7d, 0x7f, 0xdd, 0x8a, 0x62, 0x5f, 0x29, 0xa7, 0xd3, 0x3b, 0x9d, 0x1b, 0xe4,
	0x2f, 0x6d, 0xe4, 0x80, 0x1d, 0xf0, 0x8d, 0xb7, 0x80, 0xab, 0x2f, 0x29, 0xe5, 0x0f, 0x63, 0x7a,
	0x60, 0xc9, 0x56, 0x14, 0x6f, 0xe7, 0x06, 0x1c, 0x79, 0x35, 0x32, 0x68, 0xfb, 0x6c, 0x3a, 0x92,
	0x23, 0xf8, 0x3f, 0x38, 0x3f, 0x82, 0x5d, 0x5a, 0x24, 0x9e, 0x37, 0xde, 0x2d, 0xb4, 0xcf, 0xa4,
	0xfa, 0xd0, 0x8c, 0xf2, 0x95, 0xe5, 0x3f, 0x82, 0x20, 0x8d, 0xe8, 0xb8, 0xe5, 0xe5, 0x2d, 0x58,
	0x7e, 0x86, 0x0d, 0x70, 0x67, 0x13, 0x7f, 0x39, 0x1a, 0x7e, 0xea, 0x18, 0xd8, 0x81, 0xa6, 0x6c,
	0x16, 0x93, 0x6f, 0xcb, 0xe1, 0x78, 0x4c, 0x3a, 0x26, 0xb6, 0xa0, 0x3e, 0xfd, 0xba, 0x18, 0xe7,
	0xad, 0x85, 0x4d, 0xa8, 0xf9, 0x64, 0xb8, 0xb8, 0x9f, 0x4e, 0x48, 0xc7, 0x1e, 0xfc, 0x36, 0xc1,
	0xfd, 0x98, 0x7f, 0x19, 0xf8, 0x02, 0x60, 0x46, 0x45, 0xf1, 0xa8, 0xca, 0xae, 0xd7, 0x20, 0x9b,
	0xfc, 0x95, 0x78, 0x06, 0xf6, 0xa0, 0x35, 0xa3, 0x62, 0x41, 0x7f, 0x16, 0x73, 0xd7, 0x25, 0xac,
	0xf2, 0x3c, 0x63, 0xbe, 0x86, 0xc6, 0x34, 0x8d, 0xa3, 0x82, 0x77, 0x21, 0x97, 0xb3, 0x0d, 0xaf,
	0xa0, 0x56, 0x24, 0x81, 0x97, 0x72, 0x39, 0xa5, 0x0f, 0xde, 0x83, 0x73, 0xb7, 0xcd, 0x28, 0xc7,
	0x77, 0x60, 0xdf, 0x6d, 0x33, 0x7c, 0x24, 0xd1, 0x0b, 0x21, 0x5d, 0x2b, 0xe7, 0xd3, 0x35, 0xcf,
	0x08, 0xab, 0xea, 0x67, 0xf0, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x7e, 0xf3, 0xa8,
	0x1d, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobcoinClient is the client API for Jobcoin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobcoinClient interface {
	GetBalance(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Result, error)
	GetNewAddress(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Result, error)
	FundAddress(ctx context.Context, in *AddressBalance, opts ...grpc.CallOption) (*Result, error)
	Transfer(ctx context.Context, in *TransferBalance, opts ...grpc.CallOption) (*Result, error)
}

type jobcoinClient struct {
	cc *grpc.ClientConn
}

func NewJobcoinClient(cc *grpc.ClientConn) JobcoinClient {
	return &jobcoinClient{cc}
}

func (c *jobcoinClient) GetBalance(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.Jobcoin/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobcoinClient) GetNewAddress(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.Jobcoin/GetNewAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobcoinClient) FundAddress(ctx context.Context, in *AddressBalance, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.Jobcoin/FundAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobcoinClient) Transfer(ctx context.Context, in *TransferBalance, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.Jobcoin/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobcoinServer is the server API for Jobcoin service.
type JobcoinServer interface {
	GetBalance(context.Context, *Address) (*Result, error)
	GetNewAddress(context.Context, *Empty) (*Result, error)
	FundAddress(context.Context, *AddressBalance) (*Result, error)
	Transfer(context.Context, *TransferBalance) (*Result, error)
}

// UnimplementedJobcoinServer can be embedded to have forward compatible implementations.
type UnimplementedJobcoinServer struct {
}

func (*UnimplementedJobcoinServer) GetBalance(ctx context.Context, req *Address) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedJobcoinServer) GetNewAddress(ctx context.Context, req *Empty) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNewAddress not implemented")
}
func (*UnimplementedJobcoinServer) FundAddress(ctx context.Context, req *AddressBalance) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FundAddress not implemented")
}
func (*UnimplementedJobcoinServer) Transfer(ctx context.Context, req *TransferBalance) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Transfer not implemented")
}

func RegisterJobcoinServer(s *grpc.Server, srv JobcoinServer) {
	s.RegisterService(&_Jobcoin_serviceDesc, srv)
}

func _Jobcoin_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobcoinServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Jobcoin/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobcoinServer).GetBalance(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobcoin_GetNewAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobcoinServer).GetNewAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Jobcoin/GetNewAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobcoinServer).GetNewAddress(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobcoin_FundAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobcoinServer).FundAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Jobcoin/FundAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobcoinServer).FundAddress(ctx, req.(*AddressBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobcoin_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobcoinServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Jobcoin/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobcoinServer).Transfer(ctx, req.(*TransferBalance))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jobcoin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Jobcoin",
	HandlerType: (*JobcoinServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Jobcoin_GetBalance_Handler,
		},
		{
			MethodName: "GetNewAddress",
			Handler:    _Jobcoin_GetNewAddress_Handler,
		},
		{
			MethodName: "FundAddress",
			Handler:    _Jobcoin_FundAddress_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _Jobcoin_Transfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jobcoin.proto",
}

// MixerClient is the client API for Mixer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MixerClient interface {
	Mix(ctx context.Context, in *QueryDepositAddress, opts ...grpc.CallOption) (*DepositAddress, error)
}

type mixerClient struct {
	cc *grpc.ClientConn
}

func NewMixerClient(cc *grpc.ClientConn) MixerClient {
	return &mixerClient{cc}
}

func (c *mixerClient) Mix(ctx context.Context, in *QueryDepositAddress, opts ...grpc.CallOption) (*DepositAddress, error) {
	out := new(DepositAddress)
	err := c.cc.Invoke(ctx, "/pb.Mixer/Mix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MixerServer is the server API for Mixer service.
type MixerServer interface {
	Mix(context.Context, *QueryDepositAddress) (*DepositAddress, error)
}

// UnimplementedMixerServer can be embedded to have forward compatible implementations.
type UnimplementedMixerServer struct {
}

func (*UnimplementedMixerServer) Mix(ctx context.Context, req *QueryDepositAddress) (*DepositAddress, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mix not implemented")
}

func RegisterMixerServer(s *grpc.Server, srv MixerServer) {
	s.RegisterService(&_Mixer_serviceDesc, srv)
}

func _Mixer_Mix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDepositAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).Mix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mixer/Mix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).Mix(ctx, req.(*QueryDepositAddress))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mixer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Mixer",
	HandlerType: (*MixerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mix",
			Handler:    _Mixer_Mix_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jobcoin.proto",
}
